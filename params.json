{"name":"Allotment","tagline":"A gem for recording performance and timings of blocks or from point to point","body":"# Allotment\r\n\r\n[![Code Climate](https://codeclimate.com/github/benSlaughter/allotment.png)](https://codeclimate.com/github/benSlaughter/allotment)\r\n[![Build Status](https://travis-ci.org/benSlaughter/allotment.png?branch=master)](https://travis-ci.org/benSlaughter/allotment)\r\n[![Dependency Status](https://gemnasium.com/benSlaughter/allotment.png)](https://gemnasium.com/benSlaughter/allotment)\r\n[![Coverage Status](https://coveralls.io/repos/benSlaughter/allotment/badge.png?branch=master)](https://coveralls.io/r/benSlaughter/allotment)\r\n[![Gem Version](https://badge.fury.io/rb/allotment.png)](http://badge.fury.io/rb/allotment)\r\n\r\nAllotment is a performance rubygem that records and stores the performance timing of running a block of code,\r\nor from a from a chosen point, until a task or action is complete.\r\n\r\nEach performance recording is stored with a recording name,\r\neach following recording is added so that multiple recordings can be queried and assesed.\r\n\r\nAllotment also stores all the results so that they can be easily accessed at any time.\r\n\r\n## Setup\r\n\r\nAllotment has been tested with Ruby 1.9.2 and later.\r\nTo install, type:\r\n\r\n```bash\r\ngem install allotment\r\n```\r\n\r\n## Using Allotment with Cucumber\r\n\r\nIf you are using Cucumber you can record each scenario, and report the results to the console, add this line into your env.rb file:\r\n\r\n```ruby\r\nrequire 'allotment/cucumber'\r\n```\r\n\r\n## Using Allotment\r\n\r\nAllotments main features are: the ability to record performance of ruby blocks; and record from point to point.\r\n\r\nRequire Allotment at the start of your code:\r\n\r\n```ruby\r\nrequire 'allotment'\r\n```\r\n\r\n### Recording a Block\r\n\r\nThe basic way of recording a block is as follows:\r\n\r\n```ruby\r\nAllotment.record_event('my_recording') { # code here }\r\n```\r\n```ruby\r\nAllotment.record_event('my_recording') do\r\n  # code here\r\nend\r\n```\r\n\r\nWhen an event has been completed the performance timing is returned by the method:\r\n\r\n```ruby\r\nperformance = Allotment.record_event { # code here }\r\n```\r\n```ruby\r\nperformance = Allotment.record_event do\r\n  # code here\r\nend\r\n```\r\n\r\n### Record point to point:\r\n\r\nThe basic way of recording point to point is as follows:\r\n\r\n```ruby\r\nrequire 'allotment'\r\n\r\nAllotment.start_recording 'my_recording'\r\n# code here\r\nAllotment.stop_recording 'my_recording'\r\n```\r\n\r\nWhen stop recording is called the performance timing is returned by the method:\r\n\r\n```ruby\r\nperformance = Allotment.stop_recording 'my_recording'\r\n```\r\n\r\nWhen start recording is called the timing stopwatch is returned by the method:\r\n\r\n```ruby\r\nstopwatch = Allotment.start_recording 'my_recording'\r\n```\r\n\r\n_More on [stopwatches](#allotment-stopwatches)_\r\n\r\nIf a recording name does not exists, then a NameError shall be raised.\r\n\r\n### Accessing performance results\r\n\r\nPerformance recordings are stored within a hash. The reperformance results are logged to an array under the recording name.\r\nThey can be access from Allotment at any time:\r\n\r\n```ruby\r\nhash = Allotment.results\r\n```\r\n```ruby\r\narray = Allotment.results[\"my_recording\"]\r\n```\r\n```ruby\r\nresult = Allotment.results[\"my_recording\"].first\r\n```\r\n```ruby\r\nresult = Allotment.results[\"my_recording\"].average\r\n```\r\n\r\n### Allotment Stopwatches\r\n\r\nTODO\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}